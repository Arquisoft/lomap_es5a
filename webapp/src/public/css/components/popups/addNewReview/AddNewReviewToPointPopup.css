@charset "UTF-8";
/**
 * -----------------------
 * -- PALETA DE COLORES --
 * -----------------------
 * 
 * - base. Color del elemento en su estado normal.
 * - hightlight. Color del elemento cuando se dispara una acción u evento asociado a éste.
 * - dark. Color de contraste, alternativo al color base.
 */
/**
 * Obtiene el color de la paleta de colores definida en el fichero variables.scss.
 * La paleta de colores se define como un mapa.
 * 
 * - $base hace referencia al tipo de color en la paleta: primary, secondary, tertiary...
 * - $tint hace referencia al tinte a aplicar. Ejemplo: hightligh si el componente se encuentra 
 * en modo hover o similar.
 */
/**
 * Obtiene el tamaño de la variable $sizes del fichero variables.scss
 * 
 * - $type: Por ejemplo, profileImage.
 * - $size: Si se especifican varios tamaños, es el tamaño a seleccionar. 
 */
/**
 * -----------------------
 * -- PALETA DE COLORES --
 * -----------------------
 * 
 * - base. Color del elemento en su estado normal.
 * - hightlight. Color del elemento cuando se dispara una acción u evento asociado a éste.
 * - dark. Color de contraste, alternativo al color base.
 */
/**
 * Contenedor flex personalizado. Por defecto, se asignará un gap de 20px.
 */
/**
 * Contenedor grid personalizado. Por defecto, se asignará un gap de 20px.
 */
/**
 * Establece una imagen de fondo.
 * @param {string} $image - Ruta de la imagen.
 */
/**
 * En función del tipo de botón, establece el color de fondo y el borde.
 * @param {string} $color - Color del botón.
 * @param {string} $type - Tipo de botón. Por defecto, solid.
 */
/**
 * Estilos comunies para inputs (input, select).
 */
.add-new-review-point-popup-container {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: flex-start;
  gap: 30px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding: 25px;
  border-radius: 20px;
  background-color: #FFFFFF;
  z-index: 1000;
  box-shadow: 0px 0px 10px 0px rgba(0, 0, 20, 0.1);
  width: 500px;
  max-width: 500px;
}
.add-new-review-point-popup-container > .add-new-review-point-popup__header {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: center;
  gap: 0;
  width: 100%;
}
.add-new-review-point-popup-container > .add-new-review-point-popup__header > .point-category-filter-popup__close-icon {
  cursor: pointer;
  width: 36px;
  height: 36px;
  padding: 8px;
  border-radius: 100px;
}
.add-new-review-point-popup-container > .add-new-review-point-popup__header > .point-category-filter-popup__close-icon:hover {
  background-color: rgba(240, 240, 240, 0.7);
}
.add-new-review-point-popup-container > .add-new-review-point-popup__body {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  gap: 10px;
  width: 100%;
}
.add-new-review-point-popup-container > .add-new-review-point-popup__body > form {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  gap: 10px;
  width: 100%;
}
.add-new-review-point-popup-container > .add-new-review-point-popup__body > form > .add-new-review-form__form-group {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  gap: 5px;
  width: 100%;
}
.add-new-review-point-popup-container > .add-new-review-point-popup__body > form > .add-new-review-form__form-group > span {
  font-size: 0.8rem;
  color: #B9B9B9;
}
.add-new-review-point-popup-container > .add-new-review-point-popup__body > .add-new-review-point-popup__success-review {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 20px;
  width: 100%;
  padding: 10px;
  border-radius: 5px;
}
.add-new-review-point-popup-container > .add-new-review-point-popup__body > .add-new-review-point-popup__success-review > .add-new-review-point-popup-success__icon {
  width: 36px;
  height: 36px;
  padding: 5px;
  background-color: #00b840;
  fill: #FFFFFF;
  border-radius: 100px;
}/*# sourceMappingURL=AddNewReviewToPointPopup.css.map */