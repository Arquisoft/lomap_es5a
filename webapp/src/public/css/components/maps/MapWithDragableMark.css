@charset "UTF-8";
/**
 * -----------------------
 * -- PALETA DE COLORES --
 * -----------------------
 * 
 * - base. Color del elemento en su estado normal.
 * - hightlight. Color del elemento cuando se dispara una acción u evento asociado a éste.
 * - dark. Color de contraste, alternativo al color base.
 */
/**
 * -----------------------
 * -- PALETA DE COLORES --
 * -----------------------
 * 
 * - base. Color del elemento en su estado normal.
 * - hightlight. Color del elemento cuando se dispara una acción u evento asociado a éste.
 * - dark. Color de contraste, alternativo al color base.
 */
/**
 * Obtiene el color de la paleta de colores definida en el fichero variables.scss.
 * La paleta de colores se define como un mapa.
 * 
 * - $base hace referencia al tipo de color en la paleta: primary, secondary, tertiary...
 * - $tint hace referencia al tinte a aplicar. Ejemplo: hightligh si el componente se encuentra 
 * en modo hover o similar.
 */
/**
 * Obtiene el tamaño de la variable $sizes del fichero variables.scss
 * 
 * - $type: Por ejemplo, profileImage.
 * - $size: Si se especifican varios tamaños, es el tamaño a seleccionar. 
 */
/**
 * Contenedor flex personalizado. Por defecto, se asignará un gap de 20px.
 */
/**
 * Contenedor grid personalizado. Por defecto, se asignará un gap de 20px.
 */
/**
 * Establece una imagen de fondo.
 * @param {string} $image - Ruta de la imagen.
 */
/**
 * En función del tipo de botón, establece el color de fondo y el borde.
 * @param {string} $color - Color del botón.
 * @param {string} $type - Tipo de botón. Por defecto, solid.
 */
/**
 * Estilos comunies para inputs (input, select).
 */
.map-with-dragable-marker-container {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  gap: 10px;
  position: relative;
}
.map-with-dragable-marker-container > .map-with-dragable-marker-container__info-msg {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  gap: 10px;
}
.map-with-dragable-marker-container > .map-with-dragable-marker-container__info-msg > p {
  font-size: 0.9rem;
}

.leaflet-touch .leaflet-control-layers, .leaflet-touch .leaflet-bar {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 5px;
  border: none;
}

.leaflet-control-zoom .leaflet-bar .leaflet-control {
  border: none;
  border-radius: 100px;
}

.leaflet-touch .leaflet-bar a:first-child,
.leaflet-touch .leaflet-bar a:last-child {
  border-radius: 10px;
}

.leaflet-touch .leaflet-bar a {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 10px;
  width: 40px;
  height: 40px;
}

.leaflet-bar a {
  background-color: rgba(0, 0, 0, 0.5);
  -webkit-backdrop-filter: blur(3px);
          backdrop-filter: blur(3px);
  color: white;
}
.leaflet-bar a:hover, .leaflet-bar a:focus, .leaflet-bar a:active {
  background-color: #070707;
}

.leaflet-top {
  top: 10px;
}/*# sourceMappingURL=MapWithDragableMark.css.map */