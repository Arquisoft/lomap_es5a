@charset "UTF-8";
/**
 * -----------------------
 * -- PALETA DE COLORES --
 * -----------------------
 * 
 * - base. Color del elemento en su estado normal.
 * - hightlight. Color del elemento cuando se dispara una acción u evento asociado a éste.
 * - dark. Color de contraste, alternativo al color base.
 */
/**
 * -----------------------
 * -- PALETA DE COLORES --
 * -----------------------
 * 
 * - base. Color del elemento en su estado normal.
 * - hightlight. Color del elemento cuando se dispara una acción u evento asociado a éste.
 * - dark. Color de contraste, alternativo al color base.
 */
/**
 * Obtiene el color de la paleta de colores definida en el fichero variables.scss.
 * La paleta de colores se define como un mapa.
 * 
 * - $base hace referencia al tipo de color en la paleta: primary, secondary, tertiary...
 * - $tint hace referencia al tinte a aplicar. Ejemplo: hightligh si el componente se encuentra 
 * en modo hover o similar.
 */
/**
 * Obtiene el tamaño de la variable $sizes del fichero variables.scss
 * 
 * - $type: Por ejemplo, profileImage.
 * - $size: Si se especifican varios tamaños, es el tamaño a seleccionar. 
 */
/**
 * Contenedor flex personalizado. Por defecto, se asignará un gap de 20px.
 */
/**
 * Contenedor grid personalizado. Por defecto, se asignará un gap de 20px.
 */
/**
 * Establece una imagen de fondo.
 * @param {string} $image - Ruta de la imagen.
 */
/**
 * En función del tipo de botón, establece el color de fondo y el borde.
 * @param {string} $color - Color del botón.
 * @param {string} $type - Tipo de botón. Por defecto, solid.
 */
/**
 * Estilos comunies para inputs (input, select).
 */
.base-popup-modal {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  gap: 10px;
  width: 384px;
  max-width: 384px;
  max-height: 357px;
  height: -moz-fit-content;
  height: fit-content;
  border-radius: 20px;
  background-color: rgba(237, 242, 244, 0.65);
  -webkit-backdrop-filter: blur(7.5px);
          backdrop-filter: blur(7.5px);
  isolation: isolate;
  padding: 15px;
}
.base-popup-modal > .base-popup-modal__head {
  border-radius: 20px;
  overflow: hidden;
  position: relative;
}
.base-popup-modal > .base-popup-modal__head > img {
  width: 100%;
  height: auto;
  -o-object-fit: cover;
     object-fit: cover;
}
.base-popup-modal > .base-popup-modal__body {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  gap: 0;
  width: 100%;
}
.base-popup-modal > .base-popup-modal__body > .popup-modal-social-icons {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 10px;
}
.base-popup-modal > .base-popup-modal__footer {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  gap: 0;
  width: 100%;
}
.base-popup-modal > .base-popup-modal__footer > .popup-model-footer__contact-info {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  gap: 0;
}
.base-popup-modal > .base-popup-modal__footer > .popup-model-footer__contact-info > p {
  margin: 0;
}
.base-popup-modal > .base-popup-modal__footer > .popup-model-footer__contact-info > p:first-child {
  font-size: 1rem;
}
.base-popup-modal > .base-popup-modal__footer > .popup-model-footer__contact-info > p:last-child {
  font-size: 0.75rem;
}/*# sourceMappingURL=BasePopup.css.map */